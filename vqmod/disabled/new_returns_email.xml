<modification>
	
	<id>New Returns E-mail</id>
	<version>155.2</version>
	<vqmver>2.3.2</vqmver>
	<author>Clear Thinking, LLC</author>
	<email>johnathan@getclearthinking.com</email>
	<website>http://www.getclearthinking.com</website>
	
	<file name="catalog/model/account/return.php" error="skip">
		<operation error="skip">
			<search position="after"><![CDATA[
				$this->db->query("INSERT INTO
			]]></search>
			<add trim="true"><![CDATA[
				// Clear Thinking: New Returns E-mail
				$name = 'new_returns_email';
				
				if ($this->config->get($name . '_status')) {
					$return_id = $this->db->getLastId();
					$return_query = $this->db->query("
						SELECT r.return_id, r.order_id, r.product_id, r.customer_id, r.firstname, r.lastname, r.email, r.telephone, r.product, r.model, r.quantity, r.opened, r.comment, r.date_ordered, r.date_added, r.date_modified,
						(SELECT rr.name FROM " . DB_PREFIX . "return_reason rr WHERE rr.return_reason_id = r.return_reason_id AND rr.language_id = " . (int)$this->config->get('config_language_id') . ") AS reason,
						(SELECT ra.name FROM " . DB_PREFIX . "return_action ra WHERE ra.return_action_id = r.return_action_id AND ra.language_id = " . (int)$this->config->get('config_language_id') . ") AS action,
						(SELECT rs.name FROM " . DB_PREFIX . "return_status rs WHERE rs.return_status_id = r.return_status_id AND rs.language_id = " . (int)$this->config->get('config_language_id') . ") AS status
						FROM `" . DB_PREFIX . "return` r WHERE return_id = " . (int)$return_id . " AND customer_id = " . (int)$this->customer->getId() . "
					");
					$return = $return_query->row;
					
					$language = $this->session->data['language'];
					$store = $this->config->get('config_store_id');
					
					$order_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order` WHERE order_id = " . (int)$return['order_id']);
					
					$replace = array(
						'[store_name]',
						'[store_url]',
						'[store_owner]',
						'[store_address]',
						'[store_email]',
						'[store_telephone]',
						'[store_fax]',
						'[return_id]',
						'[date_added]',
						'[return_reason]',
						'[return_status]',
						'[comment]',
						'[order_id]',
						'[date_ordered]',
						'[product]',
						'[model]',
						'[quantity]',
						'[opened]',
						'[customer_id]',
						'[firstname]',
						'[lastname]',
						'[email]',
						'[telephone]'
					);
					$with = array(
						$this->config->get('config_title'),
						($this->config->get('config_url') ? $this->config->get('config_url') : HTTP_SERVER),
						$this->config->get('config_name'),
						$this->config->get('config_address'),
						$this->config->get('config_email'),
						$this->config->get('config_telephone'),
						$this->config->get('config_fax'),
						$return['return_id'],
						date($this->language->get('date_format_short')),
						$return['reason'],
						$return['status'],
						$return['comment'],
						$return['order_id'],
						date($this->language->get('date_format_short'), strtotime($return['date_ordered'])),
						$return['product'],
						$return['model'],
						$return['quantity'],
						($return['opened'] ? $this->language->get('text_yes') : $this->language->get('text_no')),
						$return['customer_id'],
						$return['firstname'],
						$return['lastname'],
						$return['email'],
						$return['telephone']
					);
					
					foreach ($order_query->row as $key => $value) {
						$replace[] = '[order_' . $key . ']';
						$with[] = $value;
					}
					
					$mail = new Mail();
					$mail->protocol = $this->config->get('config_mail_protocol');
					$mail->parameter = $this->config->get('config_mail_parameter');
					$mail->hostname = $this->config->get('config_smtp_host');
					$mail->username = $this->config->get('config_smtp_username');
					$mail->password = $this->config->get('config_smtp_password');
					$mail->port = $this->config->get('config_smtp_port');
					$mail->timeout = $this->config->get('config_smtp_timeout');
					
					if ($this->config->get($name . '_customer_email')) {
						$mail->setSubject(str_replace($replace, $with, $this->config->get($name . '_customer_subject_' . $language)));
						$mail->setHtml(html_entity_decode(str_replace($replace, $with, $this->config->get($name . '_customer_message_' . $language)), ENT_QUOTES, 'UTF-8'));
						$mail->setSender(str_replace(array(',', '&'), array('', 'and'), html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8')));
						$mail->setFrom($this->config->get('config_email'));
						$mail->setTo($return['email']);
						$mail->send();
					}
					
					$admin_emails = explode(',', $this->config->get($name . '_admin_email'));
					foreach ($admin_emails as $email) {
						$mail->setSubject(str_replace($replace, $with, $this->config->get($name . '_admin_subject_' . $language)));
						$mail->setHtml(html_entity_decode(str_replace($replace, $with, $this->config->get($name . '_admin_message_' . $language)), ENT_QUOTES, 'UTF-8'));
						$mail->setSender($return['firstname'] . ' ' . $return['lastname']);
						$mail->setFrom($return['email']);
						$mail->setTo(trim($email));
						$mail->send();
					}
				}
				// end New Returns E-mail
			]]></add>
		</operation>
	</file>
	
</modification>