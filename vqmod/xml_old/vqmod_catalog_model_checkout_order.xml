<modification>
	
	<id><![CDATA[Add new sql queries to model class]]></id>
	
	<version><![CDATA[0.1]]></version>
	
	<vqmver><![CDATA[2.x]]></vqmver>
	<author><![CDATA[Makai Lajos]]></author>
	
	<file path="catalog/model/checkout/order.php" name="">
		
		<operation>
			
			<search position="after"><![CDATA[
           class ModelCheckoutOrder extends Model {
			 ]]></search>			
			<add><![CDATA[
					public function deleteOrder($order_id) {
						$order_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND order_id = '" . (int)$order_id . "'");

						if ($order_query->num_rows) {
							$product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");

							foreach($product_query->rows as $product) {
								$this->db->query("UPDATE `" . DB_PREFIX . "product` SET quantity = (quantity + " . (int)$product['quantity'] . ") WHERE product_id = '" . (int)$product['product_id'] . "' AND subtract = '1'");

								$option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$product['order_product_id'] . "'");

								foreach ($option_query->rows as $option) {
									$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET quantity = (quantity + " . (int)$product['quantity'] . ") WHERE product_option_value_id = '" . (int)$option['product_option_value_id'] . "' AND subtract = '1'");
								}
							}
						}

						$this->db->query("DELETE FROM `" . DB_PREFIX . "order` WHERE order_id = '" . (int)$order_id . "'");
						$this->db->query("DELETE FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");
						$this->db->query("DELETE FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "'");
						$this->db->query("DELETE FROM " . DB_PREFIX . "order_download WHERE order_id = '" . (int)$order_id . "'");
						$this->db->query("DELETE FROM " . DB_PREFIX . "order_voucher WHERE order_id = '" . (int)$order_id . "'");
						$this->db->query("DELETE FROM " . DB_PREFIX . "order_total WHERE order_id = '" . (int)$order_id . "'");
						$this->db->query("DELETE FROM " . DB_PREFIX . "order_history WHERE order_id = '" . (int)$order_id . "'");
						$this->db->query("DELETE FROM " . DB_PREFIX . "order_fraud WHERE order_id = '" . (int)$order_id . "'");
						$this->db->query("DELETE FROM " . DB_PREFIX . "customer_transaction WHERE order_id = '" . (int)$order_id . "'");
						$this->db->query("DELETE FROM " . DB_PREFIX . "customer_reward WHERE order_id = '" . (int)$order_id . "'");
						$this->db->query("DELETE FROM " . DB_PREFIX . "affiliate_transaction WHERE order_id = '" . (int)$order_id . "'");
						
						if(VERSION != "1.5.4" && VERSION != "1.5.4.1" && VERSION != "1.5.3" && VERSION != "1.5.3.1" && VERSION != "1.5.5" && VERSION != "1.5.5.1"){
							$this->db->query("DELETE `or`, ort FROM " . DB_PREFIX . "order_recurring `or`, " . DB_PREFIX . "order_recurring_transaction ort WHERE order_id = '" . (int)$order_id . "' AND ort.order_recurring_id = `or`.order_recurring_id");
						}
					}
			
					public function getStore($store_id) {
						$query = $this->db->query("SELECT DISTINCT * FROM " . DB_PREFIX . "store WHERE store_id = '" . (int)$store_id . "'");
						
						return $query->row;
					}
					
					public function getStores($data = array()) {
						$store_data = $this->cache->get('store');
					
						if (!$store_data) {
							$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "store ORDER BY url");

							$store_data = $query->rows;
						
							$this->cache->set('store', $store_data);
						}
					 
						return $store_data;
					}
			]]></add>
		
		</operation>
	
	</file>

</modification>